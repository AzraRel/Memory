:root {
  --card_height: 100px;
  --card_width: 100px;
  --card_gap: 10px;
}

html {
  font-size: 1.4rem;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

article {
  max-width: 700px;
}

#playfield {
  display: grid;
  gap: var(--card_gap);
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

#menu {
  display: flex;
  gap: 1.5rem;
}

#scores {
  display: flex;
  justify-content: space-evenly;
  gap: 1.5rem;
}

.center {
  margin-left: auto;
  margin-right: auto;
}

.card {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: calc(var(--card_height));
  width: calc(var(--card_width));
  border: 1px solid orange  ;
  background: whitesmoke;
  transition: transform .5s;
  transform-style: preserve-3d;
}
.card.flip {
  transform: rotateY(-180deg);
}

.front, .back {
  position: absolute;
  top: 0;
  left: 0;
  backface-visibility: hidden;
}

.front {
  transform: rotateY(180deg);
}

.easy {
  max-width: calc(4 * var(--card_width) + 5 * var(--card_gap));
  max-height: calc(2 * var(--card_height) + 3* var(--card_gap));;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);
}
.middle {
  max-width: calc(4 * var(--card_width) + 5 * var(--card_gap));
  max-height: calc(4 * var(--card_height) + 4 * var(--card_gap));;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
}
.hard {
  max-width: calc(6 * var(--card_width) + 6 * var(--card_gap));
  max-height: calc(4 * var(--card_height) + 4 * var(--card_gap));;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(2, 1fr);
}

.border {
  border: 1px solid black;
  background: lightgrey;
  padding: 2%;
}

.playf {
  background: black;
}